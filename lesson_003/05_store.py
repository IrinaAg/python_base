# -*- coding: utf-8 -*-

# Есть словарь кодов товаров

goods = {
    'Лампа': '12345',
    'Стол': '23456',
    'Диван': '34567',
    'Стул': '45678',
}

# Есть словарь списков количества товаров на складе.

store = {
    '12345': [
        {'quantity': 27, 'price': 42},
    ],
    '23456': [
        {'quantity': 22, 'price': 510},
        {'quantity': 32, 'price': 520},
    ],
    '34567': [
        {'quantity': 2, 'price': 1200},
        {'quantity': 1, 'price': 1150},
    ],
    '45678': [
        {'quantity': 50, 'price': 100},
        {'quantity': 12, 'price': 95},
        {'quantity': 43, 'price': 97},
    ],
}

# Каждая запись отображает сколько и по какой цене закупалось товаров.
#
# Задание: вывести суммарную стоимость каждого ВИДА товара на складе c помощью циклов
#
# Формат вывода:
#   <товар_1> - <кол-во_товара_1> шт, стоимость <общая_стоимость_товара_1> руб
#   <товар_2> - <кол-во_товара_2> шт, стоимость <общая_стоимость_товара_2> руб
#   <товар_4> - <кол-во_товара_3> шт, стоимость <общая_стоимость_товара_3> руб
#
# Например:
#   Стул - 1111 шт, стоимость 8888 руб
#   Диван - 2222 шт, стоимость 9999 руб
#   и так далее
#
# Алгоритм должен получиться приблизительно такой:
#
# цикл for по товарам с получением кода и названия товара
#     инициализация переменных для подсчета количества и стоимости товара
#     получение списка на складе по коду товара
#     цикл for по списку на складе
#         подсчет количества товара
#         подсчет стоимости товара
#     вывод на консоль количества и стоимости товара на складе

for good, cod in goods.items():  # TODO Нэйминг - это огромная проблема на всех уровнях владения пайтоном(да и другими)
    lst_good = []  # TODO Использовать слова, написанные транслитом - не нужно. Всегда не торопясь подбирайте название
    lst_good.extend(goods)  # список товаров
    print(lst_good)  # TODO Нам нужен не этот список, а например вот этот:
    # [
    #     {'quantity': 27, 'price': 42},
    # ]
    for key, val in store.items():
        # TODO С таким перечислением и цикл был бы не нужен
        # TODO Обратите внимание на подсказку
        # цикл for по товарам с получением кода и названия товара
        #     инициализация переменных для подсчета количества и стоимости товара
        #     TODO это просто создание переменных, что-то вроде x = 0
        #     TODO нужно это для обнуления переменных после перехода к следующему товару
        #     получение списка на складе по коду товара  # TODO код берем из одного словаря, вставляем в другой
        #     TODO список = другой_словарь[код_из_словаря]
        #     TODO в этот момент у нас будет список по тому товару, по которому идёт цикл в данный момент
        #     TODO и с помощью цикла мы можем пройти по этому списку (не по словарю!), даже не зная его размер
        #     TODO тк цикл пройдет по списку будь там 1 элемент или 100
        #     цикл for по списку на складе
        #         TODO В переменной цикла по списку у нас будут элементы списка (в нашем примере это словари)
        #         TODO А значит переменная_цикла[количество] и переменная_цикла[цена] - помогут нам получить доступ
        #         TODO к данным
        #         подсчет количества товара
        #         подсчет стоимости товара
        #     TODO Обратите внимание на положение вывода. Он находится во внешнем цикле, ровно после цикла по списку
        #     TODO Это позволит вывести данные, которые мы собрали в цикле по списку
        #     вывод на консоль количества и стоимости товара на складе

        cost_lamps = store['12345'][0]['quantity'] * store['12345'][0]['price']
        quantity_lamps = store['12345'][0]['quantity']
        cost_table = (store['23456'][0]['quantity'] * store['23456'][0]['price']) + (store['23456'][1]['quantity'] * store['23456'][1]['price'])
        quantity_table = store['23456'][0]['quantity'] + store['23456'][1]['quantity']
        cost_couch = (store['34567'][0]['quantity'] * store['34567'][0]['price']) + (store['34567'][1]['quantity'] * store['34567'][1]['price'])
        quantity_couch = store['34567'][0]['quantity'] + store['34567'][1]['quantity']
        cost_chair = (store['45678'][0]['quantity'] * store['45678'][0]['price']) + (store['45678'][1]['quantity'] * store['45678'][1]['price'] +store['45678'][2]['quantity'] * store['45678'][2]['price'])
        quantity_chair = store['45678'][0]['quantity'] + store['45678'][1]['quantity'] + store['45678'][2]['quantity']
print(lst_good[0], '-', store['12345'][0]['quantity'], 'шт', 'стоимость', cost_lamps, 'руб')
print(lst_good[1], '-', quantity_table, 'шт', 'стоимость', cost_table, 'руб')
print(lst_good[2], '-', quantity_couch, 'шт', 'стоимость', cost_couch, 'руб')
print(lst_good[3], '-', quantity_chair, 'шт', 'стоимость', cost_chair, 'руб')
